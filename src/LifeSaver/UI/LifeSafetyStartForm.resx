<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /AdunpCYmwQc3QAAAABJRU5ErkJggg==
</value>
  </data>
</root>